#!/bin/sh

set -e
#if [ "$1" = "configure" ]
#	then
#        if [ -d /usr/doc -a ! -e /usr/doc/dtc -a -d /usr/share/doc/dtc ]
#	then
#                ln -sf ../share/doc/dtc /usr/doc/dtc
#        fi
#fi


# Debian install bash script for DTC
# Written by Thomas GOIRAND <thomas@goirand.fr>
# under LGPL Licence

# exit 0

#DEBHELPER#

# Enable this to debug!
VERBOSE_INSTALL=yes

UNIX_TYPE=debian

PATH_NAMED_CONF=/etc/bind/named.conf
PATH_QMAIL_CTRL=/etc/qmail
if [ -e /usr/bin/php4 ] ; then
	PATH_PHP_CGI="/usr/bin/php"
else
	if [ -e /usr/bin/php4 ] ; then
		PATH_PHP_CGI="/usr/bin/php4"
	else
		if [ -e /usr/bin/php5 ] ; then
			PATH_PHP_CGI="/usr/bin/php5"
		else
			if [ -e /usr/bin/php ] ; then
				PATH_PHP_CGI="/usr/bin/php"
			else
				echo "Could not found the php cli binary!!!"
				exit 0
			fi
		fi
	fi
fi
if [ -e /etc/php4/apache/php.ini ] ; then
	PATH_PHP_INI_APACHE=/etc/php4/apache/php.ini
fi
if [ -e /etc/php4/cli/php.ini ] ; then
	PATH_PHP_INI_CLI=/etc/php4/cli/php.ini
fi
if [ -e /etc/php4/apache2/php.ini ] ; then
	PATH_PHP_INI_APACHE2=/etc/php4/apache2/php.ini
fi

# Do a test to check php version. Those fucking PHP guys had
# made things so simple that this test is not very short... :(
CNT=`${PATH_PHP_CGI} -v | wc -l`
if [ $CNT -ge 2 ]
then
	PHPVE=`${PATH_PHP_CGI} -v | head -n 1 | cut -f2 -d" "`
else
	PHPVE=`${PATH_PHP_CGI} -v || true`
fi

PHPMAJOR=`echo $PHPVE | cut -f1 -d"."`
PHPMINOR=`echo $PHPVE | cut -f2 -d"."`

if [ ""$VERBOSE_INSTALL = "yes" ] ;then
	echo "The DTC installer has detected PHP version "$PHPMAJOR" release $PHPMINOR"
fi

# This part is debian specific because of (in my point of view) some
# leak in distribution. Whis is that not made by default ?

# Adding support for mysql for phpX-cgi
if [ ""$VERBOSE_INSTALL = "yes" ] ;then
	echo "===> Installing modifications in php.ini"
fi
if [ -d /etc/php4/cli/ ] ; then
	if grep mysql.so /etc/php4/cli/php.ini | grep extension= >/dev/null
	then
		echo -n ""
	else
		echo "extension=mysql.so" >>/etc/php4/cli/php.ini
	fi
fi
if [ -d /etc/php4/apache/ ] ; then
	if grep mysql.so /etc/php4/apache/php.ini | grep extension= >/dev/null
	then
		echo -n ""
	else
		echo "extension=mysql.so" >>/etc/php4/cli/php.ini
	fi
fi

if [ -d /etc/php5/cli/ ] ; then
	if grep mysql.so /etc/php5/cli/php.ini | grep extension= >/dev/null
	then
		echo -n ""
	else
		echo "extension=mysql.so" >>/etc/php5/cli/php.ini
	fi
fi
if [ -d /etc/php5/apache/ ] ; then
	if grep mysql.so /etc/php5/apache/php.ini | grep extension= >/dev/null
	then
		echo -n ""
	else
		echo "extension=mysql.so" >>/etc/php5/cli/php.ini
	fi
fi

PATH_PROFTPD_CONF=/etc/proftpd.conf
PATH_DOVECOT_CONF=/etc/dovecot.conf
PATH_CRONTAB_CONF=/etc/crontab
# in case our dovecot conf has moved...
if [ -f /etc/dovecot/dovecot.conf ] ; then
	PATH_DOVECOT_CONF=/etc/dovecot/dovecot.conf
fi
PATH_COURIER_CONF_PATH=/etc/courier
PATH_COURIER_AUTHD_CONF_PATH=/etc/courier
PATH_CYRUS_CONF=/etc/imapd.conf
PATH_POSTFIX_CONF=/etc/postfix/main.cf
PATH_POSTFIX_ETC=/etc/postfix
PATH_SASL_START_CONF=/etc/default/saslauthd
PATH_SASL_STARTUP=/etc/init.d/saslauthd
PATH_SASL_SOCKET=/var/spool/postfix/var/run/saslauthd/
PATH_SASL_PASSWD2=/usr/sbin/saslpasswd2
PATH_USERDB_BIN=/usr/sbin/userdb
PATH_MAILDROP_BIN=/usr/bin/maildrop
PATH_DTC_SHARED=/usr/share/dtc
FREERADIUS_ETC="/etc/raddb"
PATH_AWSTATS_ETC=/etc/awstats
PATH_AMAVISD_CONF=/etc/amavis/amavisd.conf
PATH_CLAMAV_CONF=/etc/clamav/clamd.conf
PATH_CGIBIN=/usr/lib/cgi-bin

USER_ADD_CMD=useradd
USER_ADD_CMD=groupadd
USER_MOD_CMD=usermod
PASSWD_CMD=passwd

PATH_DTC_ETC=$PATH_DTC_SHARED"/etc"
PATH_DTC_ADMIN=$PATH_DTC_SHARED"/admin"
PATH_DTC_CLIENT=$PATH_DTC_SHARED"/client"

# Source debconf library -- we have a Depends line
# to make sure it is there...
. /usr/share/debconf/confmodule
db_version 2.0

# Simply fetch all values stored in debconf
db_get dtc/conf_mysqlhost
conf_mysql_host=$RET
db_get dtc/conf_mysqllogin
conf_mysql_login=$RET
db_get dtc/conf_mysqlpass
conf_mysql_pass=$RET
db_get dtc/conf_mysqldb
conf_mysql_db=$RET
db_get dtc/conf_mysql_change_root
conf_mysql_change_root=$RET
db_get dtc/conf_mta_type
conf_mta_type=$RET
db_get dtc/conf_use_cyrus
conf_use_cyrus=$RET
db_get dtc/conf_apache_version
conf_apache_version=$RET
db_get dtc/main_domainname
main_domain_name=$RET
db_get dtc/dtc_adminsubdomain
dtc_admin_subdomain=$RET
db_get dtc/conf_ipaddr
conf_ip_addr=$RET
db_get dtc/conf_use_nated_vhosts
conf_use_nated_vhosts=$RET
if [ ""$conf_use_nated_vhosts = "true" -o ""$conf_use_nated_vhosts = "yes" ] ; then
	conf_use_nated_vhosts="yes"
	db_get dtc/conf_nated_vhosts_ip
	conf_nated_vhosts_ip=$RET
else
	conf_use_nated_vhosts="no"
	conf_nated_vhosts_ip="192.168.0.2"
fi
db_get dtc/conf_hostingpath
conf_hosting_path=$RET
db_get dtc/conf_chroot_path
conf_chroot_path=$RET
db_get dtc/conf_admlogin
conf_adm_login=$RET
db_get dtc/conf_admpass
conf_adm_pass=$RET

db_get dtc/conf_gen_ssl_cert
conf_gen_ssl_cert=$RET
db_get dtc/conf_cert_passphrase
conf_cert_passphrase=$RET
db_get dtc/conf_cert_countrycode
conf_cert_countrycode=$RET
db_get dtc/conf_cert_locality
conf_cert_locality=$RET
db_get dtc/conf_cert_organization
conf_cert_organization=$RET
db_get dtc/conf_cert_unit
conf_cert_unit=$RET
db_get dtc/conf_cert_email
conf_cert_email=$RET
db_get dtc/conf_cert_challenge_pass
conf_cert_challenge_pass=$RET
db_get dtc/conf_upgrade_pear
conf_upgrade_pear=$RET
db_get dtc/conf_dnsbl_list
conf_dnsbl_list=$RET
db_get dtc/conf_eth2monitor
conf_eth2monitor=$RET
db_get dtc/conf_report_setup_stat
conf_report_setup=$RET

#db_unregister dtc/conf_gen_ssl_cert
#db_unregister dtc/conf_cert_passphrase
#db_unregister dtc/conf_cert_challenge_pass
db_unregister dtc/conf_mysqlpass
db_unregister dtc/conf_mysql_change_root
db_unregister dtc/conf_admpass
db_unregister dtc/conf_upgrade_pear
# db_purge

if [ ""$conf_apache_version = "2" ] ; then
	PATH_HTTPD_CONF=/etc/apache2/apache2.conf
else
	PATH_HTTPD_CONF=/etc/apache/httpd.conf
	PATH_HTTPD_MODULES_CONF=/etc/apache/modules.conf
fi


# Setup a minimum include path with . and /usr/share/pear (or /usr/share/php for debian testing) !!!
if [ -f /usr/share/pear/PEAR.php -o -f /usr/share/php/PEAR.php ] ; then
	if grep include_path /etc/php4/cli/php.ini | grep /usr/share/pear >/dev/null
	then
		echo -n ""
	else
		if grep include_path /etc/php4/cli/php.ini | grep /usr/share/php >/dev/null
		then
			echo -n ""
		else
			if [ ""$VERBOSE_INSTALL = "yes" ] ;then
				echo "Your php.ini doesn't has pear in it's inc path: changin!"
			fi
			if [ -e /usr/share/pear ] ; then
				echo "include_path = \".:/usr/share/pear\"" >>/etc/php4/cli/php.ini
			else
				if [ -e /usr/share/php ] ; then
					echo "include_path = \".:/usr/share/php\"" >>/etc/php4/cli/php.ini
				else
					echo "I couldn't do it: please check manualy you have PEAR installed!"
				fi
			fi
		fi
	fi

	if grep include_path /etc/php5/cli/php.ini | grep /usr/share/pear >/dev/null
	then
		echo -n ""
	else
		if grep include_path /etc/php5/cli/php.ini | grep /usr/share/php >/dev/null
		then
			echo -n ""
		else
			if [ ""$VERBOSE_INSTALL = "yes" ] ;then
				echo "Your php.ini doesn't has pear in it's inc path: changin!"
			fi
			if [ -e /usr/share/pear ] ; then
				echo "include_path = \".:/usr/share/pear\"" >>/etc/php5/cli/php.ini
			else
				if [ -e /usr/share/php ] ; then
					echo "include_path = \".:/usr/share/php\"" >>/etc/php5/cli/php.ini
				else
					echo "I couldn't do it: please check manualy you have PEAR installed!"
				fi
			fi
		fi
	fi
fi

if [ -f /usr/share/php/PEAR.php ] ; then
	if [ -e /etc/php4/cli/php.ini ] ; then
		if grep include_path /etc/php4/cli/php.ini | grep /usr/share/php > /dev/null
		then
			echo -n ""
		else
			if [ ""$VERBOSE_INSTALL = "yes" ] ;then
				echo "Your php.ini doesn't has pear in it's inc path: changin!"
			fi
			echo "include_path = \".:/usr/share/php\"" >>/etc/php4/cli/php.ini
		fi
	fi

	if [ -e /etc/php5/cli/php.ini ] ; then
		if grep include_path /etc/php5/cli/php.ini | grep /usr/share/php > /dev/null
		then
			echo -n ""
		else
			if [ ""$VERBOSE_INSTALL = "yes" ] ;then
				echo "Your php.ini doesn't has pear in it's inc path: changin!"
			fi
			echo "include_path = \".:/usr/share/php\"" >>/etc/php5/cli/php.ini
		fi
	fi
fi

if [ -f /usr/share/pear/PEAR.php -o -f /usr/share/php/PEAR.php ] ; then
	if [ -e /etc/php4/apache/php.ini ] ; then
		if grep include_path /etc/php4/apache/php.ini | grep /usr/share/pear >/dev/null
		then
			echo -n ""
		else
			if grep include_path /etc/php4/apache/php.ini | grep /usr/share/php >/dev/null
			then
				echo -n ""
			else
				if [ ""$VERBOSE_INSTALL = "yes" ] ;then
					echo "Your php.ini doesn't has pear in it's inc path: changin!"
				fi
				if [ -e /usr/share/pear ] ; then
					echo "include_path = \".:/usr/share/pear\"" >>/etc/php4/apache/php.ini
				else
					if [ -e /usr/share/php ] ; then
						echo "include_path = \".:/usr/share/php\"" >>/etc/php4/apache/php.ini
					else
						echo "I couldn't do it: please check manualy you have PEAR installed!"
					fi
				fi
			fi
		fi
	fi

	if [ -e /etc/php4/apache2/php.ini ] ; then
		if grep include_path /etc/php4/apache2/php.ini | grep /usr/share/pear >/dev/null
		then
			echo -n ""
		else
			if grep include_path /etc/php4/apache2/php.ini | grep /usr/share/php >/dev/null
			then
				echo -n ""
			else
				if [ ""$VERBOSE_INSTALL = "yes" ] ;then
					echo "Your php.ini doesn't has pear in it's inc path: changin!"
				fi
				if [ -e /usr/share/pear ] ; then
					echo "include_path = \".:/usr/share/pear\"" >>/etc/php4/apache2/php.ini
				else
					if [ -e /usr/share/php ] ; then
						echo "include_path = \".:/usr/share/php\"" >>/etc/php4/apache2/php.ini
					else
						echo "I couldn't do it: please check manualy you have PEAR installed!"
					fi
				fi
			fi
		fi
	fi

	if [ -e /etc/php5/apache/php.ini ] ; then
		if grep include_path /etc/php5/apache/php.ini | grep /usr/share/pear >/dev/null
		then
			echo -n ""
		else
			if grep include_path /etc/php5/apache/php.ini | grep /usr/share/php >/dev/null
			then
				echo -n ""
			else
				if [ ""$VERBOSE_INSTALL = "yes" ] ;then
					echo "Your php.ini doesn't has pear in it's inc path: changin!"
				fi
				if [ -e /usr/share/pear ] ; then
					echo "include_path = \".:/usr/share/pear\"" >>/etc/php5/apache/php.ini
				else
					if [ -e /usr/share/php ] ; then
						echo "include_path = \".:/usr/share/php\"" >>/etc/php5/apache/php.ini
					else
						echo "I couldn't do it: please check manualy you have PEAR installed!"
					fi
				fi
			fi
		fi
	fi

	if [ -e /etc/php5/apache2/php.ini ] ; then
		if grep include_path /etc/php5/apache2/php.ini | grep /usr/share/pear >/dev/null
		then
			echo -n ""
		else
			if grep include_path /etc/php5/apache2/php.ini | grep /usr/share/php >/dev/null
			then
				echo -n ""
			else
				if [ ""$VERBOSE_INSTALL = "yes" ] ;then
					echo "Your php.ini doesn't has pear in it's inc path: changin!"
				fi
				if [ -e /usr/share/pear ] ; then
					echo "include_path = \".:/usr/share/pear\"" >>/etc/php5/apache2/php.ini
				else
					if [ -e /usr/share/php ] ; then
						echo "include_path = \".:/usr/share/php\"" >>/etc/php5/apache2/php.ini
					else
						echo "I couldn't do it: please check manualy you have PEAR installed!"
					fi
				fi
			fi
		fi
	fi

fi

if [ -f /usr/share/php/PEAR.php ]
then
	if [ -e /etc/php4/apache/php.ini ] ; then
		if grep include_path /etc/php4/apache/php.ini | grep /usr/share/php > /dev/null
		then
			echo -n ""
		else
			if [ ""$VERBOSE_INSTALL = "yes" ] ;then
				echo "Your php.ini doesn't have pear in it's inc path: changin!"
			fi
			echo "include_path = \".:/usr/share/php\"" >>/etc/php4/apache/php.ini
		fi
	fi

	if [ -e /etc/php4/apache2/php.ini ] ; then
		if grep include_path /etc/php4/apache2/php.ini | grep /usr/share/php > /dev/null
		then
			echo -n ""
		else
			if [ ""$VERBOSE_INSTALL = "yes" ] ;then
				echo "Your php.ini doesn't have pear in it's inc path: changin!"
			fi
			echo "include_path = \".:/usr/share/php\"" >>/etc/php4/apache2/php.ini
		fi
	fi

	if [ -e /etc/php5/apache/php.ini ] ; then
		if grep include_path /etc/php5/apache/php.ini | grep /usr/share/php > /dev/null
		then
			echo -n ""
		else
			if [ ""$VERBOSE_INSTALL = "yes" ] ;then
				echo "Your php.ini doesn't have pear in it's inc path: changin!"
			fi
			echo "include_path = \".:/usr/share/php\"" >>/etc/php5/apache/php.ini
		fi
	fi

	if [ -e /etc/php5/apache2/php.ini ] ; then
		if grep include_path /etc/php5/apache2/php.ini | grep /usr/share/php > /dev/null
		then
			echo -n ""
		else
			if [ ""$VERBOSE_INSTALL = "yes" ] ;then
				echo "Your php.ini doesn't have pear in it's inc path: changin!"
			fi
			echo "include_path = \".:/usr/share/php\"" >>/etc/php5/apache2/php.ini
		fi
	fi

fi


# now update the pear modules if you have the "pear" installed
# since PHP >= 4.3.0 doesn't come with Crypt_CBC that OpenSRS needs
TMP_FILE=`mktemp -t DTC_pear.install.XXXXXX` || exit 1
if [ $PHPMAJOR -ge 4 -a $PHPMINOR -ge 3 -a -e /usr/bin/pear ]
then
	if [ ""$conf_upgrade_pear = "false" ] ; then
		if [ ""$VERBOSE_INSTALL = "yes" ] ;then
			echo "===> User selected not to check for pear: skiping."
		fi
	else
		if [ ""$VERBOSE_INSTALL = "yes" ] ;then
			echo "===> Checking pear installation for PHP > 4.3"
		fi
		set +e
		set -x
		# The upgrade all is currently broken in current debian release
		/usr/bin/pear upgrade Console_Getopt > $TMP_FILE
#		/usr/bin/pear upgrade-all >> $TMP_FILE
		/usr/bin/pear install Crypt_CBC >> $TMP_FILE
		/usr/bin/pear install Auth_SASL >> $TMP_FILE
		set +x
		set -e
	fi
else
	if [ ""$VERBOSE_INSTALL = "yes" ] ;then
		echo "This is a version of PHP that should have the modules included"
	fi
fi
rm $TMP_FILE

# Changing root password of mysql
if [ "$conf_mysql_change_root" = "true" ]
then
	echo "===> Changing MySQL root password"
        echo "MySQL will now prompt your for the password to connect to"
        echo "the database. This is the OLD password that was there before"
        echo "you launched this script. If you didn't setup a root pass for"
        echo "mysqld, just hit ENTER to use empty pass."
	mysql -u$conf_mysql_login -p -h$conf_mysql_host -Dmysql --execute="UPDATE user SET Password=PASSWORD('"$conf_mysql_pass"') WHERE User='root'; FLUSH PRIVILEGES;"
fi

if [ ""$VERBOSE_INSTALL = "yes" ] ;then
	echo "===> Checking \"nameserver 127.0.0.1\" in /etc/resolv.conf"
fi
if grep "nameserver 127.0.0.1" /etc/resolv.conf >/dev/null
then
	if [ ""$VERBOSE_INSTALL = "yes" ] ;then
		echo "/etc/resolv.conf seems to be OK !"
	fi
else
	if [ ""$VERBOSE_INSTALL = "yes" ] ;then
		echo "Adding nameserver 127.0.0.1 to /etc/resolv.conf"
	fi
	TMP_FILE=`mktemp -t DTC_resolv.conf.XXXXXX` || exit 1
	if grep "search" /etc/resolv.conf >/dev/null ; then
		grep "search" /etc/resolv.conf > $TMP_FILE
	fi
	echo "nameserver 127.0.0.1" >> $TMP_FILE
	if grep "nameserver" /etc/resolv.conf ; then
		grep "nameserver" /etc/resolv.conf >> $TMP_FILE
	fi
	cat < $TMP_FILE >/etc/resolv.conf
	rm $TMP_FILE
fi

# Search for Squirrelmail folder to change it's GID so it works directly
if [ -e /var/lib/squirrelmail/data/ ]; then
	chgrp nogroup /var/lib/squirrelmail/data/
fi

if [ -e /var/spool/squirrelmail/attach ] ; then
	chgrp nogroup /var/spool/squirrelmail/attach
fi

if [ -e /var/lib/apache2/fastcgi ] ; then
	chown -R nobody:nogroup /var/lib/apache2/fastcgi
fi

NBRLINES=`cat /proc/net/dev | wc -l`
NBRIFACE=$((${NBRLINES} - 2 ))
CNT=${NBRIFACE}
ALL_IFACES=''
while [ ${CNT} -gt 0 ]; do
	ALL_IFACES=${ALL_IFACES}' '`cat /proc/net/dev | tail -n ${CNT} | cut -f 1 -d':' | gawk -F ' ' '{print $1}' | head -n 1`
	CNT=$((${CNT} - 1 ))
done

echo ${ALL_IFACES}

# Upon this line, here is the standard DTC install script :
